{"remainingRequest":"/Users/agula/Documents/EmbeddedServer/client/node_modules/babel-loader/lib/index.js!/Users/agula/Documents/EmbeddedServer/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/agula/Documents/EmbeddedServer/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/agula/Documents/EmbeddedServer/client/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/agula/Documents/EmbeddedServer/client/src/App.vue","mtime":1606460638748},{"path":"/Users/agula/Documents/EmbeddedServer/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/agula/Documents/EmbeddedServer/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/agula/Documents/EmbeddedServer/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/agula/Documents/EmbeddedServer/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\">\n\n\n    <b-form-file\n      v-model=\"file1\"\n      :state=\"Boolean(file1)\"\n      placeholder=\"Choose a file or drop it here...\"\n      drop-placeholder=\"Drop file here...\"\n    ></b-form-file>\n    <div class=\"mt-3\"> \n      <b-button @click=\"open_text=true\" variant=\"outline-primary\" > Manual Entry </b-button>\n      <b-button @click=\"file_send()\" variant=\"outline-primary\"> Submit </b-button>\n      <b-button @click=\"release_request()\" variant=\"outline-primary\"> Release </b-button>\n      <span > Compile Status : <span v-bind:class=\"{ fail : compileStatus=='Error' , success: compileStatus=='Success'}\" > {{compileStatus}} </span> </span>\n    </div>\n     <!-- <h1 v-for=\"(value, name ) in items\" v-bind:key=\"value\" >\n        {{ name }} : {{ value }}\n      </h1> -->\n\n    <vue-modaltor\n      :visible=\"open\"\n      @hide=\"open = false\">\n        <p>\n        {{ program_data }}\n        </p>\n    </vue-modaltor>\n\n    <vue-modaltor\n      :visible=\"open_text\"\n      @hide=\"open_text = false\">\n      <b-container>\n        <b-row>\n          <b-form-textarea\n            id=\"textarea\"\n            @keydown.tab.prevent=\"tabber($event)\"\n            v-model=\"modal_text\"\n            placeholder=\"Enter Python Program...\"\n            rows=\"15\"\n            max-rows=\"15\">\n          </b-form-textarea>\n        </b-row >\n        <b-row style=\"height:10px\">\n        </b-row>\n        <b-row>\n          <b-button variant=\"outline-primary\" @click=\"file_send_modal()\"> Submit! </b-button>\n        </b-row>\n      </b-container>\n    </vue-modaltor>\n\n\n\n    \n    <div class=\"mt-3\" v-for=\"(row,idx_row) of queue2D\" :key=\"row\">\n        <b-card-group deck>\n        <b-card class=\"text-center\" v-for=\"(column, idx_col) of row\" :key=\"column\">\n            <b-card-text > \n                  <button  @click=\"open = true ; moreInfo(idx_row * 3 + idx_col)\" style=\"border: None\">\n                    <b-icon icon=\"exclamation-circle-fill\" variant=\"info\" scale=\"1\"></b-icon>\n                  </button>\n                  <button @click=\"clearQueue(idx_row * 3 + idx_col)\" style=\"border: None\">\n                    <b-icon icon=\"x-circle\" scale=\"1\" variant=\"danger\"></b-icon>\n                  </button>\n\n            </b-card-text>\n        </b-card>\n        </b-card-group>\n    </div>\n\n      <div class=\"mt-3\" v-for=\"item of peripheral2D\" v-bind:key=\"item\">\n      <b-card-group deck>\n          <b-card class=\"text-center\" v-bind:class=\"{ occupied: column[1],  used: (column[2] > 0 && !column[1]) , free: column[2]==0  }\" v-for=\"column of item\" v-bind:key=\"column\"> \n              <b-card-text >{{ column[0]}} {{ column[2]}}</b-card-text>\n          </b-card> \n      </b-card-group>\n      </div>\n      <div class=\"mt-3\" >\n       <b-card-group deck>\n        <b-card class=\"text-center\" :class=\"{ occupied: (stats[0] > 50 && stats[0] <=100)}\"  v-for=\"stats of util\" :key=\"stats\">\n              <b-card-text> {{ stats[1] }}</b-card-text>\n              <b-card-text> {{ stats[0] }}</b-card-text>\n         </b-card>\n      </b-card-group>\n      </div>\n      <div class=\"mt-3\">\n      <b-card> \n        <b-card-text class=\"text-center\">Std Out </b-card-text>\n      </b-card>\n      <b-list-group>\n        <b-list-group-item v-for=\"entry of stdout_list\" v-bind:key=\"entry\"> <span style=\"color: blue\">[{{entry[1]}}]</span> <span style=\"width:1.5em\"> </span>  {{entry[0]}}</b-list-group-item>\n      </b-list-group>\n      </div>\n\n     \n  \n  </div>\n\n</template>\n\n<script>\nimport io from \"socket.io-client\"\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      file1:\"\",\n      description: \"\",\n      editedDescription: \"\",\n      selected: {},\n      socket: \"\",\n      compileStatus: \"\",\n      peripheral2D: \"\",\n      stdout_list: [],\n      status: {}, \n      queue: [],\n      queue2D: \"\",\n      program_data:\"\",\n      open: false,\n      modal_text: \"\",\n      open_text: false,\n      util: []\n    };\n  },\n\n\n  mounted(){\n    this.socket = io.connect('http://bc614e814241.ngrok.io')\n    //this.socket = io.connect('http://10.0.0.72:5000')\n    this.socket.on(\"peripheral status\", (data) => { // update all the peripheral statuses \n      console.log(\"In status\")\n      console.log(data)  \n      this.peripheral2D = this.convertObjectTo2D(data,3);\n    });\n\n    this.socket.on(\"queue add\", (data) =>{\n      this.queue.push(data);\n      console.log(data)\n      this.queue2D = this.convertTo2D(this.queue,3);\n    });\n\n    this.socket.on(\"cpu stats\", (data) => { // update all the peripheral statuses \n      var temp = []\n      for(var i = 0 ; i < 4 ; ++i){ // loop over all data ( cpu util , available memory, used memory, percentage memory used)\n        switch(i){\n          case 0: temp[i] = [data[i],\"CPU\"]; break;\n          case 1: temp[i] = [data[i],\"Avail\"]; break;\n          case 2: temp[i] = [data[i],\"Used\"]; break;\n          default: temp[i] = [data[i],\"Perc\"]; break;\n        }\n        \n      }\n      this.util = temp \n    });\n\n\n    this.socket.on(\"update text\", (data)=>{\n      this.compileStatus= \"Success\"\n      var time_obj = new Date()\n      var timestamp = time_obj.getHours() + \":\" + time_obj.getMinutes() + \":\" + time_obj.getSeconds()\n      this.stdout_list.push([data, timestamp])\n      if ( this.stdout_list.length > 6){\n        this.stdout_list.shift();\n      }\n    })\n    this.socket.on(\"compile success\", ()=>{this.compileStatus = \"Success\"});\n\n    this.socket.on(\"compile error\", (data)=>{\n      this.compileStatus = \"Error\";\n      var time_obj = new Date()\n      var timestamp = time_obj.getHours() + \":\" + time_obj.getMinutes() + \":\" + time_obj.getSeconds()\n      this.stdout_list.push([data, timestamp])\n\n    });\n\n    this.socket.on(\"dispatch queue\", (program_string) => {\n      console.log(\"dispatched\")\n      for ( let [idx, item] of this.queue.entries()){\n        if(item[\"program\"] === program_string){\n          this.queue.splice(idx,1);\n          break;\n        }\n      }\n      this.queue2D = this.convertTo2D(this.queue,3); // render to UIß\n    });\n\n\n\n    //this.peripheral2D = this.convertObjectTo2D(this.items,3);\n  },\n\n\n  methods: {\n\n    file_send(){\n      //var file = document.getElementById(\"fileForUpload\").files[0]\n      //console.log(file)\n      if(this.file1){\n        var reader = new FileReader();\n        reader.readAsText(this.file1,\"UTF-8\");\n        var socket = this.socket\n        reader.onload = function(evt){\n          console.log(evt.target.result)\n          console.log(socket)\n          for(var i = 0; i < 100; ++i){\n            socket.emit('file message', evt.target.result, socket.id); // send socket ID to track which client sent a file.\n          }\n        }\n      }\n      \n    },\n\n    tabber (event) {\n        let text = this.modal_text,\n          originalSelectionStart = event.target.selectionStart,\n          textStart = text.slice(0, originalSelectionStart),\n          textEnd =  text.slice(originalSelectionStart);\n\n        this.modal_text = `${textStart}\\t${textEnd}`\n        event.target.value = this.modal_text // required to make the cursor stay in place.\n        event.target.selectionEnd = event.target.selectionStart = originalSelectionStart + 1\n    },\n\n    moreInfo(idx){\n      console.log(\"Index: \" + idx)\n      this.program_data = this.queue[idx][\"program\"]\n    },\n\n\n    file_send_modal(){\n     // for(var i = 0; i < 100 ; ++i){\n        this.socket.emit('file message', this.modal_text, this.socket.id); // send program from modal to backend to program\n      //}\n      this.open_text = false\n    },\n\n    release_request(){\n      this.socket.emit('release', this.socket.id); // release any resources I am holding. \n    },\n\n    clearQueue(id){\n      console.log(\"Clear Queue\")\n      let queue_obj = this.queue[id]\n      this.queue.splice(id,1)\n      this.queue2D = this.convertTo2D(this.queue,3);\n      console.log(this.queue2D)\n      this.socket.emit('clear queue', queue_obj);\n      \n    },\n\n    handleResponse(data){\n      this.status = data; // data is an object that \n    },\n\n    convertTo2D(array,numOfRows){\n      var temp = []\n      var j = 0\n      for( var i = 0 ; i < array.length ; ++i){\n        if (i % numOfRows == 0){\n          temp.push( [] )\n          if( i != 0){\n            j+=1\n          }\n          temp[j].push(array[i])\n        } else{\n          temp[j].push(array[i])\n        }\n      }\n      console.log(temp)\n      return temp\n    },\n\n    convertObjectTo2D(object,numOfRows){ // break an object into a 2D array to display in UI grid \n      var i = 0;\n      var j = 0;\n      var temp = []\n      \n      console.log(object)\n      for( const key in object){\n        if (key == \"_id\" || key == \"__v\") continue; \n        console.log(key)\n        if ( i % (numOfRows) == 0){\n          temp.push([])\n          if (i != 0){\n            j +=1\n          }\n          temp[j].push([key,object[key][0],object[key][1]]);\n          \n        } else{\n          temp[j].push([key,object[key][0],object[key][1]]);\n        }\n        ++i;\n      }\n     console.log(temp);\n     return temp;\n    }\n\n  }\n};\n</script>\n\n<style>\n#app {\n  margin: auto;\n  margin-top: 3rem;\n  max-width: 700px;\n}\n.icon {\n  cursor: pointer;\n}\n\n\n.free {\n  background-color: green;\n  color: black;\n}\n.fail {\n  color: red;\n}\n.success{\n  color: green;\n}\n.occupied {\n  background-color: red;\n  color: black;\n}\n\n.used {\n  background-color: yellow;\n  color: black;\n}\n\np {\n    white-space: pre-wrap;\n}\n\nbutton {\n  background: None;\n}\n\nb-row {\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n\n\n\n\n\n\n\n</style>\n"],"sourceRoot":"src"}]}