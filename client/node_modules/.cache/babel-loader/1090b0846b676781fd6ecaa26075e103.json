{"remainingRequest":"/Users/agula/Documents/EmbeddedWebServer/client/node_modules/babel-loader/lib/index.js!/Users/agula/Documents/EmbeddedWebServer/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/agula/Documents/EmbeddedWebServer/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/agula/Documents/EmbeddedWebServer/client/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/agula/Documents/EmbeddedWebServer/client/src/App.vue","mtime":1604945196296},{"path":"/Users/agula/Documents/EmbeddedWebServer/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/agula/Documents/EmbeddedWebServer/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/agula/Documents/EmbeddedWebServer/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/agula/Documents/EmbeddedWebServer/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGlvIGZyb20gInNvY2tldC5pby1jbGllbnQiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkFwcCIsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZpbGUxOiAiIiwKICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICBlZGl0ZWREZXNjcmlwdGlvbjogIiIsCiAgICAgIHNlbGVjdGVkOiB7fSwKICAgICAgc29ja2V0OiAiIiwKICAgICAgcGVyaXBoZXJhbDJEOiAiIiwKICAgICAgc3RhdHVzOiB7fQogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHRoaXMuc29ja2V0ID0gaW8uY29ubmVjdCgnaHR0cDovL2xvY2FsaG9zdDozMDAwLycpOwogICAgdGhpcy5zb2NrZXQub24oInBlcmlwaGVyYWwgc3RhdHVzIiwgZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgLy8gdXBkYXRlIGFsbCB0aGUgcGVyaXBoZXJhbCBzdGF0dXNlcyAKICAgICAgY29uc29sZS5sb2coIkluIHN0YXR1cyIpOwogICAgICBjb25zb2xlLmxvZyhkYXRhKTsKICAgICAgX3RoaXMucGVyaXBoZXJhbDJEID0gX3RoaXMuY29udmVydE9iamVjdFRvMkQoZGF0YSwgMyk7CiAgICB9KTsgLy90aGlzLnBlcmlwaGVyYWwyRCA9IHRoaXMuY29udmVydE9iamVjdFRvMkQodGhpcy5pdGVtcywzKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGZpbGVfc2VuZDogZnVuY3Rpb24gZmlsZV9zZW5kKCkgewogICAgICAvL3ZhciBmaWxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImZpbGVGb3JVcGxvYWQiKS5maWxlc1swXQogICAgICAvL2NvbnNvbGUubG9nKGZpbGUpCiAgICAgIGlmICh0aGlzLmZpbGUxKSB7CiAgICAgICAgdmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgICAgcmVhZGVyLnJlYWRBc1RleHQodGhpcy5maWxlMSwgIlVURi04Iik7CiAgICAgICAgdmFyIHNvY2tldCA9IHRoaXMuc29ja2V0OwoKICAgICAgICByZWFkZXIub25sb2FkID0gZnVuY3Rpb24gKGV2dCkgewogICAgICAgICAgY29uc29sZS5sb2coZXZ0LnRhcmdldC5yZXN1bHQpOwogICAgICAgICAgY29uc29sZS5sb2coc29ja2V0KTsKICAgICAgICAgIHNvY2tldC5lbWl0KCdmaWxlIG1lc3NhZ2UnLCBldnQudGFyZ2V0LnJlc3VsdCwgc29ja2V0LmlkKTsgLy8gc2VuZCBzb2NrZXQgSUQgdG8gdHJhY2sgd2hpY2ggY2xpZW50IHNlbnQgYSBmaWxlLgogICAgICAgIH07CiAgICAgIH0KICAgIH0sCiAgICByZWxlYXNlX3JlcXVlc3Q6IGZ1bmN0aW9uIHJlbGVhc2VfcmVxdWVzdCgpIHsKICAgICAgdGhpcy5zb2NrZXQuZW1pdCgncmVsZWFzZScsIHRoaXMuc29ja2V0LmlkKTsgLy8gcmVsZWFzZSBhbnkgcmVzb3VyY2VzIEkgYW0gaG9sZGluZy4gCiAgICB9LAogICAgaGFuZGxlUmVzcG9uc2U6IGZ1bmN0aW9uIGhhbmRsZVJlc3BvbnNlKGRhdGEpIHsKICAgICAgdGhpcy5zdGF0dXMgPSBkYXRhOyAvLyBkYXRhIGlzIGFuIG9iamVjdCB0aGF0IAogICAgfSwKICAgIGNvbnZlcnRPYmplY3RUbzJEOiBmdW5jdGlvbiBjb252ZXJ0T2JqZWN0VG8yRChvYmplY3QsIG51bU9mUm93cykgewogICAgICB2YXIgaSA9IDA7CiAgICAgIHZhciBqID0gMDsKICAgICAgdmFyIHRlbXAgPSBbXTsKICAgICAgY29uc29sZS5sb2cob2JqZWN0KTsKCiAgICAgIGZvciAodmFyIGtleSBpbiBvYmplY3QpIHsKICAgICAgICBpZiAoa2V5ID09ICJfaWQiIHx8IGtleSA9PSAiX192IikgY29udGludWU7CiAgICAgICAgY29uc29sZS5sb2coa2V5KTsKCiAgICAgICAgaWYgKGkgJSBudW1PZlJvd3MgPT0gMCkgewogICAgICAgICAgdGVtcC5wdXNoKFtdKTsKCiAgICAgICAgICBpZiAoaSAhPSAwKSB7CiAgICAgICAgICAgIGogKz0gMTsKICAgICAgICAgIH0KCiAgICAgICAgICB0ZW1wW2pdLnB1c2goW2tleSwgb2JqZWN0W2tleV1bMF0sIG9iamVjdFtrZXldWzFdXSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRlbXBbal0ucHVzaChba2V5LCBvYmplY3Rba2V5XVswXSwgb2JqZWN0W2tleV1bMV1dKTsKICAgICAgICB9CgogICAgICAgICsraTsKICAgICAgfQoKICAgICAgY29uc29sZS5sb2codGVtcCk7CiAgICAgIHJldHVybiB0ZW1wOwogICAgfQogIH0KfTs="},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"app\">\n\n\n    <b-form-file\n      v-model=\"file1\"\n      :state=\"Boolean(file1)\"\n      placeholder=\"Choose a file or drop it here...\"\n      drop-placeholder=\"Drop file here...\"\n    ></b-form-file>\n    <div class=\"mt-3\"> \n      <span class=\"span-selected-file\"> Selected file: {{ file1 ? file1.name : '' }}</span>\n  \n      <b-button @click=\"file_send()\" variant=\"outline-primary\"> Submit </b-button>\n      <b-button @click=\"release_request()\" variant=\"outline-primary\"> Release </b-button>\n    </div>\n     <!-- <h1 v-for=\"(value, name ) in items\" v-bind:key=\"value\" >\n        {{ name }} : {{ value }}\n      </h1> -->\n\n\n      <div class=\"mt-3\" v-for=\"item in peripheral2D\" v-bind:key=\"item\">\n      <b-card-group deck>\n          <b-card class=\"text-center\" v-bind:class=\"{ free: !column[1] , used: column[1] }\" v-for=\"column in item\" v-bind:key=\"column\"> \n              <b-card-text >{{ column[0]}} {{ column[2]}}</b-card-text>\n          </b-card> \n      </b-card-group>\n      </div>\n\n     \n  \n  </div>\n\n</template>\n\n<script>\nimport io from \"socket.io-client\"\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      file1:\"\",\n      description: \"\",\n      editedDescription: \"\",\n      selected: {},\n      socket: \"\",\n      peripheral2D: \"\",\n      status: {} \n    };\n  },\n\n\n  mounted(){\n    this.socket = io.connect('http://localhost:3000/')\n    this.socket.on(\"peripheral status\", (data) => { // update all the peripheral statuses \n      console.log(\"In status\")\n      console.log(data)  \n      this.peripheral2D = this.convertObjectTo2D(data,3);\n    });\n\n    //this.peripheral2D = this.convertObjectTo2D(this.items,3);\n  },\n\n\n  methods: {\n\n    file_send(){\n      //var file = document.getElementById(\"fileForUpload\").files[0]\n      //console.log(file)\n      if(this.file1){\n        var reader = new FileReader();\n        reader.readAsText(this.file1,\"UTF-8\");\n        var socket = this.socket\n        reader.onload = function(evt){\n          console.log(evt.target.result)\n          console.log(socket)\n          socket.emit('file message', evt.target.result, socket.id); // send socket ID to track which client sent a file.\n        }\n      }\n      \n    },\n\n    release_request(){\n      this.socket.emit('release', this.socket.id); // release any resources I am holding. \n    },\n\n    handleResponse(data){\n      this.status = data; // data is an object that \n    },\n\n    convertObjectTo2D(object,numOfRows){\n      var i = 0;\n      var j = 0;\n      var temp = []\n      \n      console.log(object)\n      for( const key in object){\n        if (key == \"_id\" || key == \"__v\") continue; \n        console.log(key)\n        if ( i % (numOfRows) == 0){\n          temp.push([])\n          if (i != 0){\n            j +=1\n          }\n          temp[j].push([key,object[key][0],object[key][1]]);\n          \n        } else{\n          temp[j].push([key,object[key][0],object[key][1]]);\n        }\n        ++i;\n      }\n     console.log(temp);\n     return temp;\n    }\n\n  }\n};\n</script>\n\n<style>\n#app {\n  margin: auto;\n  margin-top: 3rem;\n  max-width: 700px;\n}\n.icon {\n  cursor: pointer;\n}\n\n.free {\n  background-color: green;\n  color: black;\n}\n.used {\n  background-color: red;\n  color: black;\n}\n\n\n\n\n\n\n\n</style>"],"sourceRoot":"src"}]}