{"remainingRequest":"C:\\Users\\Gulaa\\Desktop\\EmbeddedServer\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Gulaa\\Desktop\\EmbeddedServer\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Gulaa\\Desktop\\EmbeddedServer\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Gulaa\\Desktop\\EmbeddedServer\\client\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Gulaa\\Desktop\\EmbeddedServer\\client\\src\\App.vue","mtime":1606853388575},{"path":"C:\\Users\\Gulaa\\Desktop\\EmbeddedServer\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Gulaa\\Desktop\\EmbeddedServer\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Gulaa\\Desktop\\EmbeddedServer\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Gulaa\\Desktop\\EmbeddedServer\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div id=\"app\">\r\n\r\n\r\n    <b-form-file\r\n      v-model=\"file1\"\r\n      :state=\"Boolean(file1)\"\r\n      placeholder=\"Choose a file or drop it here...\"\r\n      drop-placeholder=\"Drop file here...\"\r\n    ></b-form-file>\r\n    <div class=\"mt-3\"> \r\n      <b-button @click=\"open_text=true\" variant=\"outline-primary\" > Manual Entry </b-button>\r\n      <b-button @click=\"file_send()\" variant=\"outline-primary\"> Submit </b-button>\r\n      <b-button @click=\"release_request()\" variant=\"outline-primary\"> Release </b-button>\r\n      <span > Compile Status : <span v-bind:class=\"{ fail : compileStatus=='Error' , success: compileStatus=='Success'}\" > {{compileStatus}} </span> </span>\r\n    </div>\r\n     <!-- <h1 v-for=\"(value, name ) in items\" v-bind:key=\"value\" >\r\n        {{ name }} : {{ value }}\r\n      </h1> -->\r\n\r\n    <vue-modaltor\r\n      :visible=\"open\"\r\n      @hide=\"open = false\">\r\n        <p>\r\n        {{ program_data }}\r\n        </p>\r\n    </vue-modaltor>\r\n\r\n    <vue-modaltor\r\n      :visible=\"open_text\"\r\n      @hide=\"open_text = false\">\r\n      <b-container>\r\n        <b-row>\r\n          <b-form-textarea\r\n            id=\"textarea\"\r\n            @keydown.tab.prevent=\"tabber($event)\"\r\n            v-model=\"modal_text\"\r\n            placeholder=\"Enter Python Program...\"\r\n            rows=\"15\"\r\n            max-rows=\"15\">\r\n          </b-form-textarea>\r\n        </b-row >\r\n        <b-row style=\"height:10px\">\r\n        </b-row>\r\n        <b-row>\r\n          <b-button variant=\"outline-primary\" @click=\"file_send_modal()\"> Submit! </b-button>\r\n        </b-row>\r\n      </b-container>\r\n    </vue-modaltor>\r\n\r\n\r\n\r\n    \r\n    <div class=\"mt-3\" v-for=\"(row,idx_row) of queue2D\" :key=\"row\">\r\n        <b-card-group deck>\r\n        <b-card class=\"text-center\" v-for=\"(column, idx_col) of row\" :key=\"column\">\r\n            <b-card-text > \r\n                Queue\r\n                  <button  @click=\"open = true ; moreInfo(idx_row * 3 + idx_col)\" style=\"border: None\">\r\n                    <b-icon icon=\"exclamation-circle-fill\" variant=\"info\" scale=\"1\"></b-icon>\r\n                  </button>\r\n                  <button @click=\"clearQueue(idx_row * 3 + idx_col)\" style=\"border: None\">\r\n                    <b-icon icon=\"x-circle\" scale=\"1\" variant=\"danger\"></b-icon>\r\n                  </button>\r\n\r\n            </b-card-text>\r\n        </b-card>\r\n        </b-card-group>\r\n    </div>\r\n\r\n      <div class=\"mt-3\" v-for=\"item of peripheral2D\" v-bind:key=\"item\">\r\n      <b-card-group deck>\r\n          <b-card class=\"text-center\" v-bind:class=\"{ occupied: column[1],  used: (column[2] > 0 && !column[1]) , free: column[2]==0  }\" v-for=\"column of item\" v-bind:key=\"column\"> \r\n              <b-card-text >{{ column[0]}} {{ column[2]}}</b-card-text>\r\n          </b-card> \r\n      </b-card-group>\r\n      </div>\r\n      <div class=\"mt-3\" >\r\n       <b-card-group deck>\r\n        <b-card class=\"text-center\" :class=\"{ occupied: (stats[0] > 50 && stats[0] <=100)}\"  v-for=\"stats of util\" :key=\"stats\">\r\n              <b-card-text> {{ stats[1] }}</b-card-text>\r\n              <b-card-text> {{ stats[0] }}</b-card-text>\r\n         </b-card>\r\n      </b-card-group>\r\n      </div>\r\n      <div class=\"mt-3\">\r\n      <b-card> \r\n        <b-card-text class=\"text-center\">Std Out </b-card-text>\r\n      </b-card>\r\n      <b-list-group>\r\n        <b-list-group-item v-for=\"entry of stdout_list\" v-bind:key=\"entry\"> <span style=\"color: blue\">[{{entry[1]}}]</span> <span style=\"width:1.5em\"> </span>  {{entry[0]}}</b-list-group-item>\r\n      </b-list-group>\r\n      </div>\r\n\r\n     \r\n  \r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport io from \"socket.io-client\"\r\n\r\nexport default {\r\n  name: \"App\",\r\n  data() {\r\n    return {\r\n      file1:\"\",\r\n      description: \"\",\r\n      editedDescription: \"\",\r\n      selected: {},\r\n      socket: \"\",\r\n      compileStatus: \"\",\r\n      peripheral2D: \"\",\r\n      stdout_list: [],\r\n      status: {}, \r\n      queue: [],\r\n      queue2D: \"\",\r\n      program_data:\"\",\r\n      open: false,\r\n      modal_text: \"\",\r\n      open_text: false,\r\n      util: []\r\n    };\r\n  },\r\n\r\n\r\n  mounted(){\r\n    //this.socket = io.connect(\"http://28508f90dbe1.ngrok.io\")\r\n    this.socket = io.connect('http://localhost:5000')\r\n    this.socket.on(\"peripheral status\", (data) => { // update all the peripheral statuses \r\n      //console.log(\"In status\")\r\n      //console.log(data)  \r\n      this.peripheral2D = this.convertObjectTo2D(data,3);\r\n    });\r\n\r\n    this.socket.on(\"queue add\", (data) =>{\r\n      this.queue.push(data);\r\n      //console.log(data)\r\n      this.queue2D = this.convertTo2D(this.queue,3);\r\n    });\r\n\r\n    this.socket.on(\"cpu stats\", (data) => { // update all the peripheral statuses \r\n      var temp = []\r\n      for(var i = 0 ; i < 4 ; ++i){ // loop over all data ( cpu util , available memory, used memory, percentage memory used)\r\n        switch(i){\r\n          case 0: temp[i] = [data[i],\"CPU\"]; break;\r\n          case 1: temp[i] = [data[i],\"Avail\"]; break;\r\n          case 2: temp[i] = [data[i-1] - data[i],\"Used\"]; break;\r\n          default: temp[i] = [data[i],\"Perc\"]; break;\r\n        }\r\n        \r\n      }\r\n      this.util = temp \r\n    });\r\n\r\n\r\n    this.socket.on(\"update text\", (data)=>{\r\n      this.compileStatus= \"Success\"\r\n      var time_obj = new Date()\r\n      var timestamp = time_obj.getHours() + \":\" + time_obj.getMinutes() + \":\" + time_obj.getSeconds()\r\n      this.stdout_list.push([data, timestamp])\r\n      if ( this.stdout_list.length > 6){      \r\n        this.stdout_list.shift();\r\n      }\r\n    })\r\n    this.socket.on(\"compile success\", ()=>{this.compileStatus = \"Success\"});\r\n\r\n    this.socket.on(\"compile error\", (data)=>{\r\n      this.compileStatus = \"Error\";\r\n      var time_obj = new Date()\r\n      var timestamp = time_obj.getHours() + \":\" + time_obj.getMinutes() + \":\" + time_obj.getSeconds()\r\n      this.stdout_list.push([data, timestamp])\r\n\r\n    });\r\n\r\n    this.socket.on(\"dispatch queue\", (program_string) => {\r\n      //console.log(\"dispatched\")\r\n      for ( let [idx, item] of this.queue.entries()){\r\n        if(item[\"program\"] === program_string){\r\n          this.queue.splice(idx,1);\r\n          break;\r\n        }\r\n      }\r\n      this.queue2D = this.convertTo2D(this.queue,3); // render to UIß\r\n    });\r\n\r\n\r\n\r\n    //this.peripheral2D = this.convertObjectTo2D(this.items,3);\r\n  },\r\n\r\n\r\n  methods: {\r\n\r\n    file_send(){\r\n      //var file = document.getElementById(\"fileForUpload\").files[0]\r\n      //console.log(file)\r\n      if(this.file1){\r\n        var reader = new FileReader();\r\n        reader.readAsText(this.file1,\"UTF-8\");\r\n        var socket = this.socket\r\n        reader.onload = function(evt){\r\n          //console.log(evt.target.result)\r\n          //console.log(socket)\r\n          //for(var i = 0; i < 100; ++i){\r\n            socket.emit('file message', evt.target.result, socket.id); // send socket ID to track which client sent a file.\r\n          ///}\r\n        }\r\n      }\r\n      \r\n    },\r\n\r\n    tabber (event) {\r\n        let text = this.modal_text,\r\n          originalSelectionStart = event.target.selectionStart,\r\n          textStart = text.slice(0, originalSelectionStart),\r\n          textEnd =  text.slice(originalSelectionStart);\r\n\r\n        this.modal_text = `${textStart}\\t${textEnd}`\r\n        event.target.value = this.modal_text // required to make the cursor stay in place.\r\n        event.target.selectionEnd = event.target.selectionStart = originalSelectionStart + 1\r\n    },\r\n\r\n    moreInfo(idx){\r\n      //console.log(\"Index: \" + idx)\r\n      this.program_data = this.queue[idx][\"program\"]\r\n    },\r\n\r\n\r\n    file_send_modal(){\r\n      //for(var i = 0; i < 100 ; ++i){\r\n        this.socket.emit('file message', this.modal_text, this.socket.id); // send program from modal to backend to program\r\n      //}\r\n      this.open_text = false\r\n    },\r\n\r\n    release_request(){\r\n      this.socket.emit('release', this.socket.id); // release any resources I am holding. \r\n    },\r\n\r\n    clearQueue(id){\r\n      //console.log(\"Clear Queue\")\r\n      let queue_obj = this.queue[id]\r\n      this.queue.splice(id,1)\r\n      this.queue2D = this.convertTo2D(this.queue,3);\r\n      //console.log(this.queue2D)\r\n      this.socket.emit('clear queue', queue_obj);\r\n      \r\n    },\r\n\r\n    handleResponse(data){\r\n      this.status = data; // data is an object that \r\n    },\r\n\r\n    convertTo2D(array,numOfRows){\r\n      var temp = []\r\n      var j = 0\r\n      for( var i = 0 ; i < array.length ; ++i){\r\n        if (i % numOfRows == 0){\r\n          temp.push( [] )\r\n          if( i != 0){\r\n            j+=1\r\n          }\r\n          temp[j].push(array[i])\r\n        } else{\r\n          temp[j].push(array[i])\r\n        }\r\n      }\r\n      //console.log(temp)\r\n      return temp\r\n    },\r\n\r\n    convertObjectTo2D(object,numOfRows){ // break an object into a 2D array to display in UI grid \r\n      var i = 0;\r\n      var j = 0;\r\n      var temp = []\r\n      \r\n      //console.log(object)\r\n      for( const key in object){\r\n        if (key == \"_id\" || key == \"__v\") continue; \r\n        //console.log(key)\r\n        if ( i % (numOfRows) == 0){\r\n          temp.push([])\r\n          if (i != 0){\r\n            j +=1\r\n          }\r\n          temp[j].push([key,object[key][0],object[key][1]]);\r\n          \r\n        } else{\r\n          temp[j].push([key,object[key][0],object[key][1]]);\r\n        }\r\n        ++i;\r\n      }\r\n     //console.log(temp);\r\n     return temp;\r\n    }\r\n\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  margin: auto;\r\n  margin-top: 3rem;\r\n  max-width: 700px;\r\n}\r\n.icon {\r\n  cursor: pointer;\r\n}\r\n\r\n\r\n.free {\r\n  background-color: green;\r\n  color: black;\r\n}\r\n.fail {\r\n  color: red;\r\n}\r\n.success{\r\n  color: green;\r\n}\r\n.occupied {\r\n  background-color: red;\r\n  color: black;\r\n}\r\n\r\n.used {\r\n  background-color: yellow;\r\n  color: black;\r\n}\r\n\r\np {\r\n    white-space: pre-wrap;\r\n}\r\n\r\nbutton {\r\n  background: None;\r\n}\r\n\r\nb-row {\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</style>\r\n"],"sourceRoot":"src"}]}