{"remainingRequest":"/Users/agula/Documents/EmbeddedServer/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/agula/Documents/EmbeddedServer/client/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/agula/Documents/EmbeddedServer/client/src/App.vue","mtime":1606460638748},{"path":"/Users/agula/Documents/EmbeddedServer/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/agula/Documents/EmbeddedServer/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/agula/Documents/EmbeddedServer/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/agula/Documents/EmbeddedServer/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBpbyBmcm9tICJzb2NrZXQuaW8tY2xpZW50IgoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJBcHAiLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmaWxlMToiIiwKICAgICAgZGVzY3JpcHRpb246ICIiLAogICAgICBlZGl0ZWREZXNjcmlwdGlvbjogIiIsCiAgICAgIHNlbGVjdGVkOiB7fSwKICAgICAgc29ja2V0OiAiIiwKICAgICAgY29tcGlsZVN0YXR1czogIiIsCiAgICAgIHBlcmlwaGVyYWwyRDogIiIsCiAgICAgIHN0ZG91dF9saXN0OiBbXSwKICAgICAgc3RhdHVzOiB7fSwgCiAgICAgIHF1ZXVlOiBbXSwKICAgICAgcXVldWUyRDogIiIsCiAgICAgIHByb2dyYW1fZGF0YToiIiwKICAgICAgb3BlbjogZmFsc2UsCiAgICAgIG1vZGFsX3RleHQ6ICIiLAogICAgICBvcGVuX3RleHQ6IGZhbHNlLAogICAgICB1dGlsOiBbXQogICAgfTsKICB9LAoKCiAgbW91bnRlZCgpewogICAgdGhpcy5zb2NrZXQgPSBpby5jb25uZWN0KCdodHRwOi8vYmM2MTRlODE0MjQxLm5ncm9rLmlvJykKICAgIC8vdGhpcy5zb2NrZXQgPSBpby5jb25uZWN0KCdodHRwOi8vMTAuMC4wLjcyOjUwMDAnKQogICAgdGhpcy5zb2NrZXQub24oInBlcmlwaGVyYWwgc3RhdHVzIiwgKGRhdGEpID0+IHsgLy8gdXBkYXRlIGFsbCB0aGUgcGVyaXBoZXJhbCBzdGF0dXNlcyAKICAgICAgY29uc29sZS5sb2coIkluIHN0YXR1cyIpCiAgICAgIGNvbnNvbGUubG9nKGRhdGEpICAKICAgICAgdGhpcy5wZXJpcGhlcmFsMkQgPSB0aGlzLmNvbnZlcnRPYmplY3RUbzJEKGRhdGEsMyk7CiAgICB9KTsKCiAgICB0aGlzLnNvY2tldC5vbigicXVldWUgYWRkIiwgKGRhdGEpID0+ewogICAgICB0aGlzLnF1ZXVlLnB1c2goZGF0YSk7CiAgICAgIGNvbnNvbGUubG9nKGRhdGEpCiAgICAgIHRoaXMucXVldWUyRCA9IHRoaXMuY29udmVydFRvMkQodGhpcy5xdWV1ZSwzKTsKICAgIH0pOwoKICAgIHRoaXMuc29ja2V0Lm9uKCJjcHUgc3RhdHMiLCAoZGF0YSkgPT4geyAvLyB1cGRhdGUgYWxsIHRoZSBwZXJpcGhlcmFsIHN0YXR1c2VzIAogICAgICB2YXIgdGVtcCA9IFtdCiAgICAgIGZvcih2YXIgaSA9IDAgOyBpIDwgNCA7ICsraSl7IC8vIGxvb3Agb3ZlciBhbGwgZGF0YSAoIGNwdSB1dGlsICwgYXZhaWxhYmxlIG1lbW9yeSwgdXNlZCBtZW1vcnksIHBlcmNlbnRhZ2UgbWVtb3J5IHVzZWQpCiAgICAgICAgc3dpdGNoKGkpewogICAgICAgICAgY2FzZSAwOiB0ZW1wW2ldID0gW2RhdGFbaV0sIkNQVSJdOyBicmVhazsKICAgICAgICAgIGNhc2UgMTogdGVtcFtpXSA9IFtkYXRhW2ldLCJBdmFpbCJdOyBicmVhazsKICAgICAgICAgIGNhc2UgMjogdGVtcFtpXSA9IFtkYXRhW2ldLCJVc2VkIl07IGJyZWFrOwogICAgICAgICAgZGVmYXVsdDogdGVtcFtpXSA9IFtkYXRhW2ldLCJQZXJjIl07IGJyZWFrOwogICAgICAgIH0KICAgICAgICAKICAgICAgfQogICAgICB0aGlzLnV0aWwgPSB0ZW1wIAogICAgfSk7CgoKICAgIHRoaXMuc29ja2V0Lm9uKCJ1cGRhdGUgdGV4dCIsIChkYXRhKT0+ewogICAgICB0aGlzLmNvbXBpbGVTdGF0dXM9ICJTdWNjZXNzIgogICAgICB2YXIgdGltZV9vYmogPSBuZXcgRGF0ZSgpCiAgICAgIHZhciB0aW1lc3RhbXAgPSB0aW1lX29iai5nZXRIb3VycygpICsgIjoiICsgdGltZV9vYmouZ2V0TWludXRlcygpICsgIjoiICsgdGltZV9vYmouZ2V0U2Vjb25kcygpCiAgICAgIHRoaXMuc3Rkb3V0X2xpc3QucHVzaChbZGF0YSwgdGltZXN0YW1wXSkKICAgICAgaWYgKCB0aGlzLnN0ZG91dF9saXN0Lmxlbmd0aCA+IDYpewogICAgICAgIHRoaXMuc3Rkb3V0X2xpc3Quc2hpZnQoKTsKICAgICAgfQogICAgfSkKICAgIHRoaXMuc29ja2V0Lm9uKCJjb21waWxlIHN1Y2Nlc3MiLCAoKT0+e3RoaXMuY29tcGlsZVN0YXR1cyA9ICJTdWNjZXNzIn0pOwoKICAgIHRoaXMuc29ja2V0Lm9uKCJjb21waWxlIGVycm9yIiwgKGRhdGEpPT57CiAgICAgIHRoaXMuY29tcGlsZVN0YXR1cyA9ICJFcnJvciI7CiAgICAgIHZhciB0aW1lX29iaiA9IG5ldyBEYXRlKCkKICAgICAgdmFyIHRpbWVzdGFtcCA9IHRpbWVfb2JqLmdldEhvdXJzKCkgKyAiOiIgKyB0aW1lX29iai5nZXRNaW51dGVzKCkgKyAiOiIgKyB0aW1lX29iai5nZXRTZWNvbmRzKCkKICAgICAgdGhpcy5zdGRvdXRfbGlzdC5wdXNoKFtkYXRhLCB0aW1lc3RhbXBdKQoKICAgIH0pOwoKICAgIHRoaXMuc29ja2V0Lm9uKCJkaXNwYXRjaCBxdWV1ZSIsIChwcm9ncmFtX3N0cmluZykgPT4gewogICAgICBjb25zb2xlLmxvZygiZGlzcGF0Y2hlZCIpCiAgICAgIGZvciAoIGxldCBbaWR4LCBpdGVtXSBvZiB0aGlzLnF1ZXVlLmVudHJpZXMoKSl7CiAgICAgICAgaWYoaXRlbVsicHJvZ3JhbSJdID09PSBwcm9ncmFtX3N0cmluZyl7CiAgICAgICAgICB0aGlzLnF1ZXVlLnNwbGljZShpZHgsMSk7CiAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgIH0KICAgICAgdGhpcy5xdWV1ZTJEID0gdGhpcy5jb252ZXJ0VG8yRCh0aGlzLnF1ZXVlLDMpOyAvLyByZW5kZXIgdG8gVUnDnwogICAgfSk7CgoKCiAgICAvL3RoaXMucGVyaXBoZXJhbDJEID0gdGhpcy5jb252ZXJ0T2JqZWN0VG8yRCh0aGlzLml0ZW1zLDMpOwogIH0sCgoKICBtZXRob2RzOiB7CgogICAgZmlsZV9zZW5kKCl7CiAgICAgIC8vdmFyIGZpbGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZmlsZUZvclVwbG9hZCIpLmZpbGVzWzBdCiAgICAgIC8vY29uc29sZS5sb2coZmlsZSkKICAgICAgaWYodGhpcy5maWxlMSl7CiAgICAgICAgdmFyIHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgICAgcmVhZGVyLnJlYWRBc1RleHQodGhpcy5maWxlMSwiVVRGLTgiKTsKICAgICAgICB2YXIgc29ja2V0ID0gdGhpcy5zb2NrZXQKICAgICAgICByZWFkZXIub25sb2FkID0gZnVuY3Rpb24oZXZ0KXsKICAgICAgICAgIGNvbnNvbGUubG9nKGV2dC50YXJnZXQucmVzdWx0KQogICAgICAgICAgY29uc29sZS5sb2coc29ja2V0KQogICAgICAgICAgZm9yKHZhciBpID0gMDsgaSA8IDEwMDsgKytpKXsKICAgICAgICAgICAgc29ja2V0LmVtaXQoJ2ZpbGUgbWVzc2FnZScsIGV2dC50YXJnZXQucmVzdWx0LCBzb2NrZXQuaWQpOyAvLyBzZW5kIHNvY2tldCBJRCB0byB0cmFjayB3aGljaCBjbGllbnQgc2VudCBhIGZpbGUuCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICAgIAogICAgfSwKCiAgICB0YWJiZXIgKGV2ZW50KSB7CiAgICAgICAgbGV0IHRleHQgPSB0aGlzLm1vZGFsX3RleHQsCiAgICAgICAgICBvcmlnaW5hbFNlbGVjdGlvblN0YXJ0ID0gZXZlbnQudGFyZ2V0LnNlbGVjdGlvblN0YXJ0LAogICAgICAgICAgdGV4dFN0YXJ0ID0gdGV4dC5zbGljZSgwLCBvcmlnaW5hbFNlbGVjdGlvblN0YXJ0KSwKICAgICAgICAgIHRleHRFbmQgPSAgdGV4dC5zbGljZShvcmlnaW5hbFNlbGVjdGlvblN0YXJ0KTsKCiAgICAgICAgdGhpcy5tb2RhbF90ZXh0ID0gYCR7dGV4dFN0YXJ0fVx0JHt0ZXh0RW5kfWAKICAgICAgICBldmVudC50YXJnZXQudmFsdWUgPSB0aGlzLm1vZGFsX3RleHQgLy8gcmVxdWlyZWQgdG8gbWFrZSB0aGUgY3Vyc29yIHN0YXkgaW4gcGxhY2UuCiAgICAgICAgZXZlbnQudGFyZ2V0LnNlbGVjdGlvbkVuZCA9IGV2ZW50LnRhcmdldC5zZWxlY3Rpb25TdGFydCA9IG9yaWdpbmFsU2VsZWN0aW9uU3RhcnQgKyAxCiAgICB9LAoKICAgIG1vcmVJbmZvKGlkeCl7CiAgICAgIGNvbnNvbGUubG9nKCJJbmRleDogIiArIGlkeCkKICAgICAgdGhpcy5wcm9ncmFtX2RhdGEgPSB0aGlzLnF1ZXVlW2lkeF1bInByb2dyYW0iXQogICAgfSwKCgogICAgZmlsZV9zZW5kX21vZGFsKCl7CiAgICAgLy8gZm9yKHZhciBpID0gMDsgaSA8IDEwMCA7ICsraSl7CiAgICAgICAgdGhpcy5zb2NrZXQuZW1pdCgnZmlsZSBtZXNzYWdlJywgdGhpcy5tb2RhbF90ZXh0LCB0aGlzLnNvY2tldC5pZCk7IC8vIHNlbmQgcHJvZ3JhbSBmcm9tIG1vZGFsIHRvIGJhY2tlbmQgdG8gcHJvZ3JhbQogICAgICAvL30KICAgICAgdGhpcy5vcGVuX3RleHQgPSBmYWxzZQogICAgfSwKCiAgICByZWxlYXNlX3JlcXVlc3QoKXsKICAgICAgdGhpcy5zb2NrZXQuZW1pdCgncmVsZWFzZScsIHRoaXMuc29ja2V0LmlkKTsgLy8gcmVsZWFzZSBhbnkgcmVzb3VyY2VzIEkgYW0gaG9sZGluZy4gCiAgICB9LAoKICAgIGNsZWFyUXVldWUoaWQpewogICAgICBjb25zb2xlLmxvZygiQ2xlYXIgUXVldWUiKQogICAgICBsZXQgcXVldWVfb2JqID0gdGhpcy5xdWV1ZVtpZF0KICAgICAgdGhpcy5xdWV1ZS5zcGxpY2UoaWQsMSkKICAgICAgdGhpcy5xdWV1ZTJEID0gdGhpcy5jb252ZXJ0VG8yRCh0aGlzLnF1ZXVlLDMpOwogICAgICBjb25zb2xlLmxvZyh0aGlzLnF1ZXVlMkQpCiAgICAgIHRoaXMuc29ja2V0LmVtaXQoJ2NsZWFyIHF1ZXVlJywgcXVldWVfb2JqKTsKICAgICAgCiAgICB9LAoKICAgIGhhbmRsZVJlc3BvbnNlKGRhdGEpewogICAgICB0aGlzLnN0YXR1cyA9IGRhdGE7IC8vIGRhdGEgaXMgYW4gb2JqZWN0IHRoYXQgCiAgICB9LAoKICAgIGNvbnZlcnRUbzJEKGFycmF5LG51bU9mUm93cyl7CiAgICAgIHZhciB0ZW1wID0gW10KICAgICAgdmFyIGogPSAwCiAgICAgIGZvciggdmFyIGkgPSAwIDsgaSA8IGFycmF5Lmxlbmd0aCA7ICsraSl7CiAgICAgICAgaWYgKGkgJSBudW1PZlJvd3MgPT0gMCl7CiAgICAgICAgICB0ZW1wLnB1c2goIFtdICkKICAgICAgICAgIGlmKCBpICE9IDApewogICAgICAgICAgICBqKz0xCiAgICAgICAgICB9CiAgICAgICAgICB0ZW1wW2pdLnB1c2goYXJyYXlbaV0pCiAgICAgICAgfSBlbHNlewogICAgICAgICAgdGVtcFtqXS5wdXNoKGFycmF5W2ldKQogICAgICAgIH0KICAgICAgfQogICAgICBjb25zb2xlLmxvZyh0ZW1wKQogICAgICByZXR1cm4gdGVtcAogICAgfSwKCiAgICBjb252ZXJ0T2JqZWN0VG8yRChvYmplY3QsbnVtT2ZSb3dzKXsgLy8gYnJlYWsgYW4gb2JqZWN0IGludG8gYSAyRCBhcnJheSB0byBkaXNwbGF5IGluIFVJIGdyaWQgCiAgICAgIHZhciBpID0gMDsKICAgICAgdmFyIGogPSAwOwogICAgICB2YXIgdGVtcCA9IFtdCiAgICAgIAogICAgICBjb25zb2xlLmxvZyhvYmplY3QpCiAgICAgIGZvciggY29uc3Qga2V5IGluIG9iamVjdCl7CiAgICAgICAgaWYgKGtleSA9PSAiX2lkIiB8fCBrZXkgPT0gIl9fdiIpIGNvbnRpbnVlOyAKICAgICAgICBjb25zb2xlLmxvZyhrZXkpCiAgICAgICAgaWYgKCBpICUgKG51bU9mUm93cykgPT0gMCl7CiAgICAgICAgICB0ZW1wLnB1c2goW10pCiAgICAgICAgICBpZiAoaSAhPSAwKXsKICAgICAgICAgICAgaiArPTEKICAgICAgICAgIH0KICAgICAgICAgIHRlbXBbal0ucHVzaChba2V5LG9iamVjdFtrZXldWzBdLG9iamVjdFtrZXldWzFdXSk7CiAgICAgICAgICAKICAgICAgICB9IGVsc2V7CiAgICAgICAgICB0ZW1wW2pdLnB1c2goW2tleSxvYmplY3Rba2V5XVswXSxvYmplY3Rba2V5XVsxXV0pOwogICAgICAgIH0KICAgICAgICArK2k7CiAgICAgIH0KICAgICBjb25zb2xlLmxvZyh0ZW1wKTsKICAgICByZXR1cm4gdGVtcDsKICAgIH0KCiAgfQp9Owo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n\n\n    <b-form-file\n      v-model=\"file1\"\n      :state=\"Boolean(file1)\"\n      placeholder=\"Choose a file or drop it here...\"\n      drop-placeholder=\"Drop file here...\"\n    ></b-form-file>\n    <div class=\"mt-3\"> \n      <b-button @click=\"open_text=true\" variant=\"outline-primary\" > Manual Entry </b-button>\n      <b-button @click=\"file_send()\" variant=\"outline-primary\"> Submit </b-button>\n      <b-button @click=\"release_request()\" variant=\"outline-primary\"> Release </b-button>\n      <span > Compile Status : <span v-bind:class=\"{ fail : compileStatus=='Error' , success: compileStatus=='Success'}\" > {{compileStatus}} </span> </span>\n    </div>\n     <!-- <h1 v-for=\"(value, name ) in items\" v-bind:key=\"value\" >\n        {{ name }} : {{ value }}\n      </h1> -->\n\n    <vue-modaltor\n      :visible=\"open\"\n      @hide=\"open = false\">\n        <p>\n        {{ program_data }}\n        </p>\n    </vue-modaltor>\n\n    <vue-modaltor\n      :visible=\"open_text\"\n      @hide=\"open_text = false\">\n      <b-container>\n        <b-row>\n          <b-form-textarea\n            id=\"textarea\"\n            @keydown.tab.prevent=\"tabber($event)\"\n            v-model=\"modal_text\"\n            placeholder=\"Enter Python Program...\"\n            rows=\"15\"\n            max-rows=\"15\">\n          </b-form-textarea>\n        </b-row >\n        <b-row style=\"height:10px\">\n        </b-row>\n        <b-row>\n          <b-button variant=\"outline-primary\" @click=\"file_send_modal()\"> Submit! </b-button>\n        </b-row>\n      </b-container>\n    </vue-modaltor>\n\n\n\n    \n    <div class=\"mt-3\" v-for=\"(row,idx_row) of queue2D\" :key=\"row\">\n        <b-card-group deck>\n        <b-card class=\"text-center\" v-for=\"(column, idx_col) of row\" :key=\"column\">\n            <b-card-text > \n                  <button  @click=\"open = true ; moreInfo(idx_row * 3 + idx_col)\" style=\"border: None\">\n                    <b-icon icon=\"exclamation-circle-fill\" variant=\"info\" scale=\"1\"></b-icon>\n                  </button>\n                  <button @click=\"clearQueue(idx_row * 3 + idx_col)\" style=\"border: None\">\n                    <b-icon icon=\"x-circle\" scale=\"1\" variant=\"danger\"></b-icon>\n                  </button>\n\n            </b-card-text>\n        </b-card>\n        </b-card-group>\n    </div>\n\n      <div class=\"mt-3\" v-for=\"item of peripheral2D\" v-bind:key=\"item\">\n      <b-card-group deck>\n          <b-card class=\"text-center\" v-bind:class=\"{ occupied: column[1],  used: (column[2] > 0 && !column[1]) , free: column[2]==0  }\" v-for=\"column of item\" v-bind:key=\"column\"> \n              <b-card-text >{{ column[0]}} {{ column[2]}}</b-card-text>\n          </b-card> \n      </b-card-group>\n      </div>\n      <div class=\"mt-3\" >\n       <b-card-group deck>\n        <b-card class=\"text-center\" :class=\"{ occupied: (stats[0] > 50 && stats[0] <=100)}\"  v-for=\"stats of util\" :key=\"stats\">\n              <b-card-text> {{ stats[1] }}</b-card-text>\n              <b-card-text> {{ stats[0] }}</b-card-text>\n         </b-card>\n      </b-card-group>\n      </div>\n      <div class=\"mt-3\">\n      <b-card> \n        <b-card-text class=\"text-center\">Std Out </b-card-text>\n      </b-card>\n      <b-list-group>\n        <b-list-group-item v-for=\"entry of stdout_list\" v-bind:key=\"entry\"> <span style=\"color: blue\">[{{entry[1]}}]</span> <span style=\"width:1.5em\"> </span>  {{entry[0]}}</b-list-group-item>\n      </b-list-group>\n      </div>\n\n     \n  \n  </div>\n\n</template>\n\n<script>\nimport io from \"socket.io-client\"\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      file1:\"\",\n      description: \"\",\n      editedDescription: \"\",\n      selected: {},\n      socket: \"\",\n      compileStatus: \"\",\n      peripheral2D: \"\",\n      stdout_list: [],\n      status: {}, \n      queue: [],\n      queue2D: \"\",\n      program_data:\"\",\n      open: false,\n      modal_text: \"\",\n      open_text: false,\n      util: []\n    };\n  },\n\n\n  mounted(){\n    this.socket = io.connect('http://bc614e814241.ngrok.io')\n    //this.socket = io.connect('http://10.0.0.72:5000')\n    this.socket.on(\"peripheral status\", (data) => { // update all the peripheral statuses \n      console.log(\"In status\")\n      console.log(data)  \n      this.peripheral2D = this.convertObjectTo2D(data,3);\n    });\n\n    this.socket.on(\"queue add\", (data) =>{\n      this.queue.push(data);\n      console.log(data)\n      this.queue2D = this.convertTo2D(this.queue,3);\n    });\n\n    this.socket.on(\"cpu stats\", (data) => { // update all the peripheral statuses \n      var temp = []\n      for(var i = 0 ; i < 4 ; ++i){ // loop over all data ( cpu util , available memory, used memory, percentage memory used)\n        switch(i){\n          case 0: temp[i] = [data[i],\"CPU\"]; break;\n          case 1: temp[i] = [data[i],\"Avail\"]; break;\n          case 2: temp[i] = [data[i],\"Used\"]; break;\n          default: temp[i] = [data[i],\"Perc\"]; break;\n        }\n        \n      }\n      this.util = temp \n    });\n\n\n    this.socket.on(\"update text\", (data)=>{\n      this.compileStatus= \"Success\"\n      var time_obj = new Date()\n      var timestamp = time_obj.getHours() + \":\" + time_obj.getMinutes() + \":\" + time_obj.getSeconds()\n      this.stdout_list.push([data, timestamp])\n      if ( this.stdout_list.length > 6){\n        this.stdout_list.shift();\n      }\n    })\n    this.socket.on(\"compile success\", ()=>{this.compileStatus = \"Success\"});\n\n    this.socket.on(\"compile error\", (data)=>{\n      this.compileStatus = \"Error\";\n      var time_obj = new Date()\n      var timestamp = time_obj.getHours() + \":\" + time_obj.getMinutes() + \":\" + time_obj.getSeconds()\n      this.stdout_list.push([data, timestamp])\n\n    });\n\n    this.socket.on(\"dispatch queue\", (program_string) => {\n      console.log(\"dispatched\")\n      for ( let [idx, item] of this.queue.entries()){\n        if(item[\"program\"] === program_string){\n          this.queue.splice(idx,1);\n          break;\n        }\n      }\n      this.queue2D = this.convertTo2D(this.queue,3); // render to UIß\n    });\n\n\n\n    //this.peripheral2D = this.convertObjectTo2D(this.items,3);\n  },\n\n\n  methods: {\n\n    file_send(){\n      //var file = document.getElementById(\"fileForUpload\").files[0]\n      //console.log(file)\n      if(this.file1){\n        var reader = new FileReader();\n        reader.readAsText(this.file1,\"UTF-8\");\n        var socket = this.socket\n        reader.onload = function(evt){\n          console.log(evt.target.result)\n          console.log(socket)\n          for(var i = 0; i < 100; ++i){\n            socket.emit('file message', evt.target.result, socket.id); // send socket ID to track which client sent a file.\n          }\n        }\n      }\n      \n    },\n\n    tabber (event) {\n        let text = this.modal_text,\n          originalSelectionStart = event.target.selectionStart,\n          textStart = text.slice(0, originalSelectionStart),\n          textEnd =  text.slice(originalSelectionStart);\n\n        this.modal_text = `${textStart}\\t${textEnd}`\n        event.target.value = this.modal_text // required to make the cursor stay in place.\n        event.target.selectionEnd = event.target.selectionStart = originalSelectionStart + 1\n    },\n\n    moreInfo(idx){\n      console.log(\"Index: \" + idx)\n      this.program_data = this.queue[idx][\"program\"]\n    },\n\n\n    file_send_modal(){\n     // for(var i = 0; i < 100 ; ++i){\n        this.socket.emit('file message', this.modal_text, this.socket.id); // send program from modal to backend to program\n      //}\n      this.open_text = false\n    },\n\n    release_request(){\n      this.socket.emit('release', this.socket.id); // release any resources I am holding. \n    },\n\n    clearQueue(id){\n      console.log(\"Clear Queue\")\n      let queue_obj = this.queue[id]\n      this.queue.splice(id,1)\n      this.queue2D = this.convertTo2D(this.queue,3);\n      console.log(this.queue2D)\n      this.socket.emit('clear queue', queue_obj);\n      \n    },\n\n    handleResponse(data){\n      this.status = data; // data is an object that \n    },\n\n    convertTo2D(array,numOfRows){\n      var temp = []\n      var j = 0\n      for( var i = 0 ; i < array.length ; ++i){\n        if (i % numOfRows == 0){\n          temp.push( [] )\n          if( i != 0){\n            j+=1\n          }\n          temp[j].push(array[i])\n        } else{\n          temp[j].push(array[i])\n        }\n      }\n      console.log(temp)\n      return temp\n    },\n\n    convertObjectTo2D(object,numOfRows){ // break an object into a 2D array to display in UI grid \n      var i = 0;\n      var j = 0;\n      var temp = []\n      \n      console.log(object)\n      for( const key in object){\n        if (key == \"_id\" || key == \"__v\") continue; \n        console.log(key)\n        if ( i % (numOfRows) == 0){\n          temp.push([])\n          if (i != 0){\n            j +=1\n          }\n          temp[j].push([key,object[key][0],object[key][1]]);\n          \n        } else{\n          temp[j].push([key,object[key][0],object[key][1]]);\n        }\n        ++i;\n      }\n     console.log(temp);\n     return temp;\n    }\n\n  }\n};\n</script>\n\n<style>\n#app {\n  margin: auto;\n  margin-top: 3rem;\n  max-width: 700px;\n}\n.icon {\n  cursor: pointer;\n}\n\n\n.free {\n  background-color: green;\n  color: black;\n}\n.fail {\n  color: red;\n}\n.success{\n  color: green;\n}\n.occupied {\n  background-color: red;\n  color: black;\n}\n\n.used {\n  background-color: yellow;\n  color: black;\n}\n\np {\n    white-space: pre-wrap;\n}\n\nbutton {\n  background: None;\n}\n\nb-row {\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n\n\n\n\n\n\n\n</style>\n"]}]}