{"remainingRequest":"/Users/agula/Documents/EmbeddedServer/client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/agula/Documents/EmbeddedServer/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/agula/Documents/EmbeddedServer/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/agula/Documents/EmbeddedServer/client/src/App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"/Users/agula/Documents/EmbeddedServer/client/src/App.vue","mtime":1606460638748},{"path":"/Users/agula/Documents/EmbeddedServer/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/agula/Documents/EmbeddedServer/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/agula/Documents/EmbeddedServer/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/agula/Documents/EmbeddedServer/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}