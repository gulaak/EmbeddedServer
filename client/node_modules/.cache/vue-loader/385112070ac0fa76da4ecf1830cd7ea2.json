{"remainingRequest":"/Users/agula/Documents/EmbeddedWebServer/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/agula/Documents/EmbeddedWebServer/client/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/agula/Documents/EmbeddedWebServer/client/src/App.vue","mtime":1604945196296},{"path":"/Users/agula/Documents/EmbeddedWebServer/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/agula/Documents/EmbeddedWebServer/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/agula/Documents/EmbeddedWebServer/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/agula/Documents/EmbeddedWebServer/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/agula/Documents/EmbeddedWebServer/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNhcHAgewogIG1hcmdpbjogYXV0bzsKICBtYXJnaW4tdG9wOiAzcmVtOwogIG1heC13aWR0aDogNzAwcHg7Cn0KLmljb24gewogIGN1cnNvcjogcG9pbnRlcjsKfQoKLmZyZWUgewogIGJhY2tncm91bmQtY29sb3I6IGdyZWVuOwogIGNvbG9yOiBibGFjazsKfQoudXNlZCB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmVkOwogIGNvbG9yOiBibGFjazsKfQoKCgoKCgoK"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n\n\n    <b-form-file\n      v-model=\"file1\"\n      :state=\"Boolean(file1)\"\n      placeholder=\"Choose a file or drop it here...\"\n      drop-placeholder=\"Drop file here...\"\n    ></b-form-file>\n    <div class=\"mt-3\"> \n      <span class=\"span-selected-file\"> Selected file: {{ file1 ? file1.name : '' }}</span>\n  \n      <b-button @click=\"file_send()\" variant=\"outline-primary\"> Submit </b-button>\n      <b-button @click=\"release_request()\" variant=\"outline-primary\"> Release </b-button>\n    </div>\n     <!-- <h1 v-for=\"(value, name ) in items\" v-bind:key=\"value\" >\n        {{ name }} : {{ value }}\n      </h1> -->\n\n\n      <div class=\"mt-3\" v-for=\"item in peripheral2D\" v-bind:key=\"item\">\n      <b-card-group deck>\n          <b-card class=\"text-center\" v-bind:class=\"{ free: !column[1] , used: column[1] }\" v-for=\"column in item\" v-bind:key=\"column\"> \n              <b-card-text >{{ column[0]}} {{ column[2]}}</b-card-text>\n          </b-card> \n      </b-card-group>\n      </div>\n\n     \n  \n  </div>\n\n</template>\n\n<script>\nimport io from \"socket.io-client\"\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      file1:\"\",\n      description: \"\",\n      editedDescription: \"\",\n      selected: {},\n      socket: \"\",\n      peripheral2D: \"\",\n      status: {} \n    };\n  },\n\n\n  mounted(){\n    this.socket = io.connect('http://localhost:3000/')\n    this.socket.on(\"peripheral status\", (data) => { // update all the peripheral statuses \n      console.log(\"In status\")\n      console.log(data)  \n      this.peripheral2D = this.convertObjectTo2D(data,3);\n    });\n\n    //this.peripheral2D = this.convertObjectTo2D(this.items,3);\n  },\n\n\n  methods: {\n\n    file_send(){\n      //var file = document.getElementById(\"fileForUpload\").files[0]\n      //console.log(file)\n      if(this.file1){\n        var reader = new FileReader();\n        reader.readAsText(this.file1,\"UTF-8\");\n        var socket = this.socket\n        reader.onload = function(evt){\n          console.log(evt.target.result)\n          console.log(socket)\n          socket.emit('file message', evt.target.result, socket.id); // send socket ID to track which client sent a file.\n        }\n      }\n      \n    },\n\n    release_request(){\n      this.socket.emit('release', this.socket.id); // release any resources I am holding. \n    },\n\n    handleResponse(data){\n      this.status = data; // data is an object that \n    },\n\n    convertObjectTo2D(object,numOfRows){\n      var i = 0;\n      var j = 0;\n      var temp = []\n      \n      console.log(object)\n      for( const key in object){\n        if (key == \"_id\" || key == \"__v\") continue; \n        console.log(key)\n        if ( i % (numOfRows) == 0){\n          temp.push([])\n          if (i != 0){\n            j +=1\n          }\n          temp[j].push([key,object[key][0],object[key][1]]);\n          \n        } else{\n          temp[j].push([key,object[key][0],object[key][1]]);\n        }\n        ++i;\n      }\n     console.log(temp);\n     return temp;\n    }\n\n  }\n};\n</script>\n\n<style>\n#app {\n  margin: auto;\n  margin-top: 3rem;\n  max-width: 700px;\n}\n.icon {\n  cursor: pointer;\n}\n\n.free {\n  background-color: green;\n  color: black;\n}\n.used {\n  background-color: red;\n  color: black;\n}\n\n\n\n\n\n\n\n</style>"]}]}